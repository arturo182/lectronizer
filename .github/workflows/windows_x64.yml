name: Windows x64 build

env:
    QT_VERSION: '6.2.2'
    QT_ARCH: 'win64_mingw'

on: [push, pull_request]

jobs:
    build:
        runs-on: windows-latest

        steps:
            - name: Install Qt
              uses: jurplel/install-qt-action@v2
              with:
                version: ${{ env.QT_VERSION }}
                arch: ${{ env.QT_ARCH }}

            - name: Clone repo
              uses: actions/checkout@v2
              with:
                ref: ${{ github.event.client_payload.branch }}

            - name: Get short sha1
              id: short_sha1
              run: echo "::set-output name=value::$(git rev-parse --short HEAD)"

            - name: Compile Lectronizer
              run: |
                qmake.exe VER_SHA1=${{ steps.short_sha1.outputs.value }} lectronizer.pro
                mingw32-make.exe -j
                mkdir output/plugins/platforms
                mkdir output/plugins/styles
                mkdir output/plugins/tls
                copy release/lectronizer.exe output
                copy "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\opt\bin\libwinpthread-1.dll" output
                copy "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\opt\bin\libeay32.dll" output
                copy "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\opt\bin\ssleay32.dll" output
                copy "${{ env.Qt6_DIR }}/bin/libgcc_s_seh-1.dll" output
                copy "${{ env.Qt6_DIR }}/bin/libstdc++-6.dll" output
                copy "${{ env.Qt6_DIR }}/bin/Qt6Core.dll" output
                copy "${{ env.Qt6_DIR }}/bin/Qt6Gui.dll" output
                copy "${{ env.Qt6_DIR }}/bin/Qt6Widgets.dll" output
                copy "${{ env.Qt6_DIR }}/bin/Qt6Network.dll" output
                copy "${{ env.Qt6_DIR }}/plugins/styles/qwindowsvistastyle.dll" "output/plugins/styles"
                copy "${{ env.Qt6_DIR }}/plugins/platforms/qwindows.dll" "output/plugins/platforms"
                copy "${{ env.Qt6_DIR }}/plugins/tls/qopensslbackend.dll" "output/plugins/tls"
                copy "${{ env.Qt6_DIR }}/plugins/tls/qschannelbackend.dll" "output/plugins/tls"
                copy "${{ env.Qt6_DIR }}/plugins/tls/qcertonlybackend.dll" "output/plugins/tls"

            - name: Upload package artifact
              uses: actions/upload-artifact@v1
              with:
                path: output
                name: lectronizer-${{ steps.short_sha1.outputs.value }}
                
